# -#include <Wire.h>
#include <hd44780.h>
#include <hd44780ioClass/hd44780_I2Cexp.h>
#include <Adafruit_Fingerprint.h>


#if (defined(__AVR__) || defined(ESP8266)) && !defined(__AVR_ATmega2560__)

SoftwareSerial mySerial(2, 3);


#else
#define mySerial Serial1
#endif

hd44780_I2Cexp lcd; //lcd 객체 선언
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);
String nameArr[3] = {"20181396","20180496","TEST"};
int logArr[3] = {0, 0 ,0};

void setup()
{
  //시리얼 통신 시작
  Serial.begin(9600);
  //lcd 통신 시작
  lcd.begin(16,2);

  //엑셀에 출력될 라벨(타이틀) 출력
  Serial.println("CLEARDATA");
  Serial.println("LABEL, TIME, ID ,NAME, LOG");
  while (!Serial);  
  delay(100);
  Serial.println("\n\nAdafruit finger detect test");

  
  //지문인식 센서 통신 시작
  finger.begin(57600);
  delay(5);
  //지문인식 센서 디바이스연결 확인
  if (finger.verifyPassword()) {
    Serial.println("Found fingerprint sensor!");
  } else {
    Serial.println("Did not find fingerprint sensor :(");
    while (1) { 
      delay(1); }
  }
  //지문인식 센서 정보 확인
  Serial.println(F("Reading sensor parameters"));
  finger.getParameters();


 //등록된 지문 유무 판단
  finger.getTemplateCount();

  if (finger.templateCount == 0) {
   
  }
  else {

  }
}

void loop()                    
{
  
  getFingerprintID();
  delay(50);            
}
 
  
uint8_t getFingerprintID() {
  uint8_t p = finger.getImage();
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Put your finger");
  lcd.setCursor(0,1);
  lcd.print("on the sensor!");
  
  switch (p) {
    case FINGERPRINT_OK:
      break;
    case FINGERPRINT_NOFINGER:
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      return p;
    case FINGERPRINT_IMAGEFAIL:
      return p;
    default:
      return p;
  }

  p = finger.image2Tz();
  switch (p) {
    case FINGERPRINT_OK:
      break;
    case FINGERPRINT_IMAGEMESS:  
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      return p;
    case FINGERPRINT_FEATUREFAIL:
      return p;
    case FINGERPRINT_INVALIDIMAGE:
      return p;
    default:
      return p;
  }

  p = finger.fingerSearch();
  if (p == FINGERPRINT_OK) {
  } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    return p;
  } else if (p == FINGERPRINT_NOTFOUND) {
    return p;
  } else {
    return p;
  }

  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("#");
  lcd.print(finger.fingerID);
  lcd.print(" ");
  lcd.print(nameArr[finger.fingerID -1]);
  lcd.print(" ");

  Serial.print("DATA, TIME, ");
  Serial.print(finger.fingerID);
  Serial.print(", ");
  Serial.print(nameArr[finger.fingerID -1]);
  Serial.print(", ");
  
  if(logArr[finger.fingerID -1] ==0){
    logArr[finger.fingerID -1] = 1;
    Serial.println("Log In");
    lcd.print("Log In");
    lcd.setCursor(0,1);
    lcd.print("welcom the class");
  }
  else{ 
    logArr[finger.fingerID -1] = 0;
    Serial.println("Log Out");
    lcd.print("Log Out");
    lcd.setCursor(0,1);
    lcd.print("good bye");
  }
  delay(2000);

  return finger.fingerID;
}

//지문인식 실패시 -1 반환, 다른 경우라면 ID 리턴
int getFingerprintIDez() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.fingerFastSearch();
  if (p != FINGERPRINT_OK)  return -1;

  Serial.print("Found ID #"); Serial.print(finger.fingerID);
  Serial.print(" with confidence of "); Serial.println(finger.confidence);
  return finger.fingerID; 
}
